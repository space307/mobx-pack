{"version":3,"sources":["../src/lib/ServiceStarter.js"],"names":["ServiceStarter","stratedServices","waiters","service","conf","getConfig","bindAs","processExpected","result","promises","depsError","waitFor","length","chekDeps","processWaiting","Promise","all","console","error","forEach","item","push","resolve","reject","addWaiter","waiterService","expected","hash","entry","currentPoint","chain","point","hasOwnProperty","goByChain","_","each","data","waiterName"],"mappings":"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","sourcesContent":["import _ from 'lodash';\n\nexport default class ServiceStarter {\n  stratedServices = {};\n  waiters = {};\n\n  register(service) {\n    const conf = service.getConfig();\n\n    if (conf.bindAs) {\n      this.stratedServices[conf.bindAs] = service;\n    }\n    this.processExpected(service);\n  }\n\n  waitFor(service) {\n    let result = false;\n    const conf = service.getConfig();\n    let promises;\n    let depsError;\n\n    if (conf.waitFor && conf.waitFor.length) {\n      depsError = this.chekDeps(conf.bindAs, conf.waitFor, this.waiters);\n\n      if (!depsError) {\n        promises = this.processWaiting(service);\n        result = promises.length ? Promise.all(promises) : false;\n      } else {\n        console.error(`ServiceStarter error. \"${conf.bindAs}\": ${depsError}.`);\n      }\n    }\n\n    return result;\n  }\n\n  processWaiting(service) {\n    const conf = service.getConfig();\n    let result = false;\n\n    conf.waitFor.forEach((item) => {\n      if (!this.stratedServices[item]) {\n        if (!result) {\n          result = [];\n        }\n\n        result.push(new Promise(\n          (resolve, reject) => {\n            this.addWaiter(service, item, resolve, reject);\n          },\n        ));\n      }\n    });\n    return result;\n  }\n  processExpected(service) {\n    const conf = service.getConfig();\n    const waiters = this.waiters[conf.bindAs];\n    if (waiters && waiters.length) {\n      waiters.forEach((item) => {\n        item.resolve();\n      });\n    }\n  }\n\n  addWaiter(waiterService, expected, resolve, reject) {\n    if (!this.waiters[expected]) {\n      this.waiters[expected] = [];\n    }\n    this.waiters[expected].push({ waiterService, resolve, reject });\n  }\n  /* eslint-disable */\n  goByChain(hash, entry, currentPoint, chain) {\n    if (!chain[currentPoint]) {\n      chain[currentPoint] = 1;\n      for (const point in hash[currentPoint]) {\n        if (!hash[currentPoint].hasOwnProperty(point)) {\n          continue;\n        }\n        if (point !== entry) {\n          return this.goByChain(hash, entry, point, chain);\n        }\n\n        return `Loading conflict with\"${entry}\"`;\n      }\n    }\n  }\n  /* eslint-enable */\n  chekDeps(bindAs, waitFor, waiters) {\n    let result = false;\n    const chain = {};\n    const hash = {};\n\n    if (waitFor.length) {\n      _.each(waiters, (data, service) => {\n        data.forEach((item) => {\n          const conf = item.waiterService.getConfig();\n          const waiterName = conf.bindAs;\n\n          if (!hash[waiterName]) {\n            hash[waiterName] = {};\n          }\n          hash[waiterName][service] = 1;\n        });\n      });\n\n      if (!hash[bindAs]) {\n        hash[bindAs] = {};\n      }\n\n      waitFor.forEach((item) => {\n        hash[bindAs][item] = 1;\n      });\n    }\n\n    _.each(hash, (data, point) => {\n      const error = this.goByChain(hash, point, point, chain);\n      if (error) {\n        result = error;\n      }\n    });\n\n    return result;\n  }\n}\n\n"],"file":"ServiceStarter.js"}