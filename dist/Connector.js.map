{"version":3,"sources":["../src/lib/Connector.js"],"names":["ConnectorF","Component","opt","options","Object","assign","preLoader","wairForServices","services","test","servicesLoaded","componentId","apiResolved","storeInitializator","store","name","length","Promise","all","map","service","start","then","initComponent","forceUpdate","destroy","stop","forEach","config","unstoppable","props","resolveStore","resolveApi","storeToResolve","context","resolved","call","console","warn","api","apiMethod","key","callApi","arg","binder","getConfig","bindAs","bind","composed","helper","result","o","value","item","undefined","composeProps","comp","React","displayName","childContextTypes","PropTypes","object","contextTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { each, forIn } from 'lodash';\nimport { getUid, protoName } from './helper/util.js';\n\n\nfunction ConnectorF(Component, opt = {}) {\n  const options = Object.assign({\n    preLoader: null,\n    wairForServices: true,\n    services: [],\n    test: 0,\n  }, opt);\n\n\n  return observer(class Connector extends React.Component {\n    static displayName = (Component.displayName && `${Component.displayName}Connector`) || `${Component.name}Connector`;\n\n    static childContextTypes = {\n      store: PropTypes.object,\n    };\n\n    static contextTypes = {\n      store: PropTypes.object,\n    };\n\n    getChildContext() {\n      return {\n        store: this.store,\n      };\n    }\n\n    componentWillMount() {\n      this.servicesLoaded = false;\n      this.options = options;\n      this.componentId = `${Component.name}_${getUid()}`;\n\n      if (this.options.services.length) {\n        Promise.all(this.options.services.map(service => service.start(this.componentId))).then(() => {\n          this.initComponent();\n\n          if (this.options.wairForServices) {\n            this.forceUpdate();\n          }\n        });\n      }\n\n      if (!this.options.services.length || !this.options.wairForServices) {\n        this.initComponent();\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.store && this.storeInitializator) {\n        if (typeof this.store.destroy === 'function') {\n          this.store.destroy();\n        }\n        this.store.stop(this.componentId);\n      }\n\n\n      if (this.options.services) {\n        this.options.services.forEach((service) => {\n          if (!service.config || !service.config.unstoppable) {\n            service.stop(this.componentId);\n          }\n        });\n      }\n    }\n\n    initComponent() {\n      this.servicesLoaded = true;\n      this.apiResolved = null;\n\n      this.storeInitializator = (this.options.store && typeof this.options.store === 'function') ||\n        (this.props.store && typeof this.props.store === 'function');\n      this.store = this.resolveStore(this.options.store || this.props.store); // eslint-disable-line\n\n      if (this.store && this.storeInitializator) {\n        this.store.start(this.componentId);\n      }\n      this.resolveApi(this.store);\n    }\n\n    servicesLoaded = false;\n    options = {};\n    componentId = '';\n    apiResolved = null;\n    storeInitializator = false;\n    store = null;\n\n    resolveStore(store) {\n      const storeToResolve = store || this.context.store;\n      const resolved = typeof storeToResolve === 'function' ? storeToResolve.call(this) : storeToResolve;\n\n      if (typeof store === 'function' && !resolved) {\n        console.warn(`Connector. In component \"${Component.name}\" store not resolved\"`);\n      }\n\n      return resolved;\n    }\n\n    resolveApi(store) {\n      const api = {};\n      const { componentId } = this;\n\n      if (store && store.api) {\n        each(store.api, (apiMethod, key) => {\n          if (typeof apiMethod === 'function') {\n            api[key] = store.callApi ? function (...arg) {\n              return store.binder.callApi(store.getConfig().bindAs, key, componentId, ...arg);\n            } : apiMethod.bind(store);\n          } else {\n            console.warn(`Connector. For \"${Component.name}\" api \n            function \"${key}\" not found in store \"${protoName(store)}\"`);\n          }\n        });\n        this.apiResolved = api;\n      }\n    }\n\n    composeProps() {\n      let composed;\n      let helper;\n      const result = {};\n      const o = this.options;\n\n      if (typeof o !== 'undefined') {\n        helper = typeof o === 'function' ? o : o.helper;\n      }\n\n      each(this.props, (value, key) => {\n        if (key !== 'store') {\n          result[key] = value;\n        }\n      });\n\n      if (helper) {\n        composed = helper.call(this, this.store);\n        forIn(composed, (item, key) => {\n          if (result[key]) {\n            console.warn(`Connector. For \"${Component.name}\" variable name \"${key}\" exists in the helper and props.`);\n          }\n          result[key] = item;\n        });\n\n        return composed !== undefined ? result : undefined;\n      }\n\n      return result;\n    }\n\n    render() {\n      if (this.options.wairForServices && !this.servicesLoaded) {\n        return typeof this.options.preLoader === 'function' ? <this.options.preLoader /> : this.options.preLoader;\n      }\n\n      const props = this.composeProps();\n      let comp = null;\n\n      if (props !== undefined) {\n        if (this.apiResolved) {\n          props.api = this.apiResolved;\n        }\n        comp = <Component{...props} />;\n      } else {\n        return typeof this.options.preLoader === 'function' ? <this.options.preLoader /> : this.options.preLoader;\n      }\n\n      return comp;\n    }\n  });\n}\n\nexport default ConnectorF;\n\n"],"file":"Connector.js"}