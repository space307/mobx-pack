{"version":3,"sources":["../src/lib/BaseStore.js"],"names":["STATUS_SERVICE_SLEEP","STATUS_SERVICE_STARTING","STATUS_SERVICE_STARTED","STATUS_SERVICE_STOPPING","STATUS_SERVICE_STOPPED","STATUS_SERVICE_FAIL","ON_START","ON_STOP","BaseStore","context","disposers","disposerKeys","binder","mounted","serviceFail","alreadyStarting","alreadyStopping","initiators","serviceStarter","initiatorId","waitFor","Promise","resolve","reject","then","startDo","catch","error","starting","push","startOk","serviceStatus","getConfig","autoBind","bindApp","proceedService","e","err","console","warn","register","stopping","_","indexOf","remove","n","alreadyStopped","result","length","id","fn","state1","state2","initiator","setServiceStatus","Error","serviceError","msg","status","failDesc","serviceReady","serviceWasStarted","obsr","key","services","addDisposer","bindAs","obsrs","forEach","addObserve","undefined","config","Object","prototype","hasOwnProperty","call","isBind","bind","unbind","from","methodName","arg","callApi","varName","raw","importVar","onMount","unbindApp","constructor","instance","observable"],"mappings":"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","sourcesContent":["/**\n отличия от боевого файла:\n - ворзвращается не функция а класс принимающий объект context\n - поле appBinder переименовано в биндер\n */\nimport _ from 'lodash';\nimport { observable } from 'mobx';\nimport { protoName } from './helper/util.js';\n\nexport const STATUS_SERVICE_SLEEP = 'sleep';\nexport const STATUS_SERVICE_STARTING = 'starting';\nexport const STATUS_SERVICE_STARTED = 'started';\nexport const STATUS_SERVICE_STOPPING = 'stopping';\nexport const STATUS_SERVICE_STOPPED = 'stopped';\nexport const STATUS_SERVICE_FAIL = 'fail';\n\nconst ON_START = 'onStart';\nconst ON_STOP = 'onStop';\n\n\nexport default class BaseStore {\n  disposers = [];\n  disposerKeys = {};\n  binder;\n  mounted = false;\n  @observable serviceStatus = STATUS_SERVICE_SLEEP;\n  @observable serviceReady = false;\n  @observable serviceWasStarted = false;\n  serviceFail = null;\n  alreadyStarting = false;\n  alreadyStopping = false;\n  initiators = [];\n  static instance = null;\n\n  constructor(context) {\n    if (context) {\n      this.binder = context.binder;\n      this.serviceStarter = context.serviceStarter;\n    }\n  }\n\n  static getInstance(context) {\n    if (!this.instance) {\n      this.instance = new this(context);\n    }\n    return this.instance;\n  }\n\n  start(initiatorId, context) {\n    if (context) {\n      this.binder = context.binder;\n      this.serviceStarter = context.serviceStarter;\n    }\n    const waitFor = this.serviceStarter.waitFor(this);\n\n    return waitFor\n      ?\n      new Promise((resolve, reject) => waitFor.then(() => {\n        this.startDo(initiatorId, this.serviceStarter)\n          .then(() => resolve())\n          .catch(error => reject(error));\n      }))\n      :\n      this.startDo(initiatorId, this.serviceStarter);\n  }\n\n  startDo(initiatorId) {\n    const starting = this.alreadyStarting;\n\n    this.alreadyStarting = true;\n\n    return starting ?\n      new Promise((resolve) => {\n        this.initiators.push(initiatorId);\n        this.startOk(resolve);\n      })\n      :\n      new Promise((resolve, reject) => { // eslint-disable-line\n        if (!initiatorId) {\n          reject(`Start service \"${protoName(this)}\" error. No initiator id.`);\n        } else if (this.serviceStatus !== STATUS_SERVICE_SLEEP &&\n          this.serviceStatus !== STATUS_SERVICE_STOPPED) {\n          reject(`Start service \"${protoName(this)}\" error. \n                Wrong status \"${this.serviceStatus}\". Initiator - \"${initiatorId}\"`);\n        } else {\n          // auto bind\n          if (this.getConfig().autoBind !== false) {\n            this.bindApp();\n          }\n          return this.proceedService(initiatorId, ON_START,\n            STATUS_SERVICE_STARTING, STATUS_SERVICE_STARTED).then(() => {\n            resolve();\n          }).catch((e) => {\n            reject(e);\n          });\n        }\n      }).then(() => {\n        this.initiators.push(initiatorId);\n        return new Promise((resolve) => {\n          this.startOk(resolve);\n        });\n      }).catch((err) => {\n        console.warn(err);\n        return new Promise((resolve, reject) => { reject(err); });\n      });\n  }\n\n  startOk(resolve) {\n    if (this.serviceStarter) {\n      this.serviceStarter.register(this);\n    }\n\n    resolve();\n  }\n\n  stop(initiatorId) {\n    const stopping = this.alreadyStopping;\n\n    return stopping\n      ?\n      new Promise((resolve) => {\n        resolve();\n      })\n      :\n      new Promise((resolve, reject) => {\n        if (!initiatorId) {\n          resolve();\n        } else if (_.indexOf(this.initiators, initiatorId) === -1) {\n          reject(`Stop service \"${protoName(this)}\" error. Initiator with id \"${initiatorId}\" not found.`);\n        } else if (this.serviceStatus === STATUS_SERVICE_STARTED ||\n          this.serviceStatus === STATUS_SERVICE_STARTING ||\n          this.serviceStatus === STATUS_SERVICE_FAIL) {\n          _.remove(this.initiators, n => n === initiatorId);\n\n          resolve();\n        } else {\n          resolve(true);\n        }\n      }).then((alreadyStopped) => {\n        let result = false;\n\n        if ((alreadyStopped || this.initiators.length) && initiatorId) {\n          result = new Promise((resolve) => {\n            resolve(this.initiators.length);\n          });\n        } else {\n          this.alreadyStopping = true;\n          result = this.proceedService(initiatorId, ON_STOP, STATUS_SERVICE_STOPPING, STATUS_SERVICE_STOPPED);\n        }\n\n        return result;\n      });\n  }\n\n  proceedService(id, fn, state1, state2) {\n    const initiator = id || 'unknown';\n    return new Promise((resolve, reject) => {\n      const result = this[fn]();\n\n      if (result instanceof Promise) {\n        this.setServiceStatus(state1);\n\n        result.then(() => {\n          this.setServiceStatus(state2);\n          resolve();\n        }).catch((e) => {\n          this.setServiceStatus(STATUS_SERVICE_FAIL, `${state1}_fail`);\n          const error = typeof e === 'string' ? new Error(e) : e;\n          e.serviceError = `Service:\"${protoName(this)}\", initing by \"${initiator}\" has status \"${this.serviceFail}\"`;\n          reject(error);\n        });\n      } else if (result) {\n        this.setServiceStatus(state2);\n        resolve();\n      } else {\n        this.setServiceStatus(STATUS_SERVICE_FAIL, `${state1}_fail`);\n        reject(new Error(`Service:\"${protoName(this)}\", initing by \"${initiator}\" has status \"${this.serviceFail}\"`));\n      }\n    });\n  }\n\n  setServiceFail(msg) {\n    this.setServiceStatus(STATUS_SERVICE_FAIL, `${msg}_fail`);\n  }\n\n  setServiceStarted() {\n    this.setServiceStatus(STATUS_SERVICE_STARTED);\n  }\n\n  setServiceStatus(status, failDesc) {\n    this.alreadyStarting = status === STATUS_SERVICE_STARTING || status === STATUS_SERVICE_STARTED;\n    this.serviceStatus = status;\n    this.serviceReady = status === STATUS_SERVICE_STARTED;\n\n    if (status === STATUS_SERVICE_STARTED) {\n      this.serviceWasStarted = true;\n      this.alreadyStopping = false;\n    }\n\n    if (failDesc) {\n      this.serviceFail = failDesc;\n    }\n  }\n\n  onStart() {\n    return true;\n  }\n\n  onStop() {\n    return true;\n  }\n\n  /**\n   * Добавляет наблюдателя переменной, при необходимости именуется ключом\n   * @public\n   * @param {object} obsr\n   * @param {string} key\n   * @param {array} services\n   * @returns {*|disposer}\n   */\n\n  addObserve(obsr, key, services) {\n    let result;\n    // TODO придумать как выпилить this.getConfig()\n    if (!services || !this.binder.addDisposer(this.getConfig().bindAs, services, obsr)) {\n      this.disposers.push(obsr);\n\n      if (this.disposerKeys[key]) {\n        console.error(`Observer with key \"${key}\" already exists in the store ${protoName(this)}`);\n        result = false;\n      } else {\n        if (key) {\n          this.disposerKeys[key] = this.disposers.length - 1;\n        }\n\n        result = this.disposers[this.disposers.length - 1];\n      }\n    }\n\n    return result;\n  }\n\n  addObservers(obsrs, services) {\n    obsrs.forEach((obsr) => {\n      this.addObserve(obsr, null, services);\n    });\n  }\n  /**\n   * Удаляет именованный ключом наблюдатель переменной\n   * @public\n   * @param {string} key\n   */\n  _removeObserve(key) {\n    if (typeof this.disposerKeys[key] === 'undefined') {\n      console.error(`Observer with key \"${key}\" not fount in the store ${protoName(this)}`);\n      return false;\n    }\n\n    this.disposers[this.disposerKeys[key]]();\n    this.disposers[this.disposerKeys[key]] = null;\n    delete this.disposerKeys[key];\n    return undefined;\n  }\n\n  /**\n   * Привязывает стор к глобальному биндеру\n   * @public\n   * @param {object} bindData\n   */\n  bindApp() {\n    const config = this.getConfig();\n\n    if (Object.prototype.hasOwnProperty.call(config, 'bindAs')) {\n      if (!this.binder.isBind(config.bindAs)) {\n        this.binder.bind(this, config);\n      }\n    } else {\n      console.warn(`Base Store. ${protoName(this)} has no bindAs in config`);\n    }\n  }\n  /**\n   * Отвязывает стор от глобального биндера\n   * @public\n   */\n  unbindApp() {\n    if (this.getConfig().bindAs) {\n      this.binder.unbind(this.getConfig().bindAs);\n    }\n  }\n  callApi(from, methodName, ...arg) {\n    return this.binder.callApi(from, methodName, this.getConfig().config, ...arg);\n  }\n\n  getConfig() {\n    return this.config || {};\n  }\n\n  importVar(from, varName, raw) {\n    return this.binder.importVar(from, varName, this.getConfig().bindAs, raw);\n  }\n\n  /**\n   * Вызывается у сторов синглтонов в момент маунта компонента\n   * @public\n   */\n  onMount() {\n\n  }\n  /**\n   * Вызывается из коннектора в момент маунта компонента\n   * @public\n   */\n  onMountInit() {\n    if (!this.mounted) {\n      this.onMount();\n    }\n    this.mounted = true;\n  }\n  /**\n   * Отвязывает стор от зависимостей перед удалением\n   * @public\n   */\n  destroy() {\n    this.disposers.forEach((obsr) => {\n      obsr();\n    });\n    this.unbindApp();\n\n    if (this.constructor.instance) {\n      this.constructor.instance = null;\n    }\n  }\n}\n\n"],"file":"BaseStore.js"}