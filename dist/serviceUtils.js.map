{"version":3,"sources":["../src/lib/serviceUtils.js"],"names":["startServices","binder","serviceStartConfigList","Promise","all","map","serviceStartConfig","start","stopServices","Error","forEach","ServiceProto","stop","getStartedServices","services","bindAs","binderConfig","service","getService","push","length"],"mappings":";;;;;;;;;AAMO,SAASA,aAAT,CACLC,MADK,EAELC,sBAFK,EAGO;AACZ,SAAOC,OAAO,CAACC,GAAR,CACLF,sBAAsB,CAACG,GAAvB,CACE,UAACC,kBAAD;AAAA,WACEL,MAAM,CAACM,KAAP,CAAaD,kBAAb,CADF;AAAA,GADF,CADK,CAAP;AAMD;;AAGM,SAASE,YAAT,CAAsBP,MAAtB,EAA+CC,sBAA/C,EAA4G;AACjH,MAAI,CAACA,sBAAD,IAA2B,CAACD,MAAhC,EAAwC;AACtC,UAAM,IAAIQ,KAAJ,CAAU,gCAAV,CAAN;AACD;;AACDP,EAAAA,sBAAsB,CAACQ,OAAvB,CACE,UAACC,YAAD,EAAgD;AAC9CV,IAAAA,MAAM,CAACW,IAAP,CAAYD,YAAZ;AACD,GAHH;AAKD;;AAEM,SAASE,kBAAT,CACLZ,MADK,EAELC,sBAFK,EAE6D;AAClE,MAAMY,QAAQ,GAAG,EAAjB;AACAZ,EAAAA,sBAAsB,CAACQ,OAAvB,CACE,UAACC,YAAD,EAAgD;AAAA,QAE5CI,MAF4C,GAG1CJ,YAAY,CAACK,YAH6B,CAE5CD,MAF4C;AAK9C,QAAME,OAAO,GAAGhB,MAAM,CAACiB,UAAP,CAAkBH,MAAlB,CAAhB;;AAEA,QAAIE,OAAJ,EAAa;AACXH,MAAAA,QAAQ,CAACK,IAAT,CAAcF,OAAd;AACD;AACF,GAXH;AAaA,SAAOH,QAAQ,CAACM,MAAT,KAAoBlB,sBAAsB,CAACkB,MAA3C,GAAoDN,QAApD,GAA+D,IAAtE;AACD","sourcesContent":["// @flow\n\nimport type { ServiceStartConfigType } from './typing/common.js';\nimport type { BinderInterface } from './typing/binderInterface.js';\n\n\nexport function startServices(\n  binder: BinderInterface,\n  serviceStartConfigList: Array<ServiceStartConfigType>,\n): Promise<*> {\n  return Promise.all(\n    serviceStartConfigList.map(\n      (serviceStartConfig: ServiceStartConfigType): Promise<*> =>\n        binder.start(serviceStartConfig),\n    ),\n  );\n}\n\n\nexport function stopServices(binder: BinderInterface, serviceStartConfigList: Array<ServiceStartConfigType>): void {\n  if (!serviceStartConfigList || !binder) {\n    throw new Error('Wrong stopServices attributes!');\n  }\n  serviceStartConfigList.forEach(\n    (ServiceProto: ServiceStartConfigType): void => {\n      binder.stop(ServiceProto);\n    },\n  );\n}\n\nexport function getStartedServices(\n  binder: BinderInterface,\n  serviceStartConfigList: Array<ServiceStartConfigType>): ?Array<*> {\n  const services = [];\n  serviceStartConfigList.forEach(\n    (ServiceProto: ServiceStartConfigType): void => {\n      const {\n        bindAs,\n      } = ServiceProto.binderConfig;\n\n      const service = binder.getService(bindAs);\n\n      if (service) {\n        services.push(service);\n      }\n    },\n  );\n  return services.length === serviceStartConfigList.length ? services : null;\n}\n"],"file":"serviceUtils.js"}