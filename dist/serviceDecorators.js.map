{"version":3,"sources":["../src/lib/serviceDecorators.js"],"names":["validateName","name","test","validateNameList","list","reduce","acc","item","createConfig","onStart","onStop","bindAs","onBind","onUnbind","putServiceNamesToConfig","serviceNames","service","callbackName","optionName","pushToArray","proto","constructor","binderConfig","length","forEach","serviceName","Error","push","putMethodNameToConfig","join"],"mappings":"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","sourcesContent":["// @flow\n\nimport type { BinderConfigType } from './typing/common.js';\n\ntype ServiceType = Class<*>;\n\n\nfunction validateName(name: string): boolean {\n  return !!(name && typeof name === 'string' && /^[A-Za-z][A-Za-z0-9_]+$/.test(name));\n}\nfunction validateNameList(list: Array<string>): boolean {\n  return list.reduce((acc, item) => {\n    if (!validateName(item)) {\n      acc = false;\n    }\n    return acc;\n  }, true);\n}\n\n\nfunction createConfig(): BinderConfigType {\n  return {\n    onStart: [],\n    onStop: '',\n    bindAs: '',\n    onBind: [],\n    onUnbind: [],\n  };\n}\n\nfunction putServiceNamesToConfig(\n  serviceNames: Array<string>,\n  service: ServiceType,\n  callbackName: string,\n  optionName: string,\n  pushToArray: boolean = true,\n): void {\n  const proto = service.constructor;\n  if (!proto.binderConfig) {\n    proto.binderConfig = createConfig();\n  }\n\n  if (serviceNames && serviceNames.length && callbackName) {\n    serviceNames.forEach(\n      (serviceName: string) => {\n        if (!validateName(serviceName)) {\n          throw new Error(`Wrong service name \"${serviceName}\" \n          passed to function \"${callbackName}\" decorator (service:${proto.name}).`);\n        }\n      },\n    );\n\n    if (pushToArray) {\n      proto.binderConfig[optionName].push(\n        [...serviceNames,\n          callbackName],\n      );\n    } else {\n      proto.binderConfig[optionName] = [...serviceNames,\n        callbackName];\n    }\n  }\n}\n\n\nfunction putMethodNameToConfig(service: ServiceType, callbackName: string, optionName: string): void {\n  const proto = service.constructor;\n  if (!proto.binderConfig) {\n    proto.binderConfig = createConfig();\n  }\n  proto.binderConfig[optionName] = callbackName;\n}\n\n\nexport function bindAs(serviceName: string): (service: ServiceType) => ServiceType {\n  if (typeof serviceName === 'function') {\n    throw new Error(`Wrong attributes passed to bindAs decorator (service:${serviceName.name}).`);\n  }\n  return (service: ServiceType): ServiceType => {\n    if (!validateName(serviceName)) {\n      throw new Error(`Wrong name \"${serviceName}\" passed to bindAs decorator (service:${service.name}).`);\n    }\n\n    if (!service.binderConfig) {\n      service.binderConfig = createConfig();\n    }\n    service.binderConfig.bindAs = serviceName;\n    return service;\n  };\n}\n\n\nexport function onBind(\n  ...serviceNames: Array<string>\n): (service: ServiceType, callbackName: string) => ServiceType {\n  if (!serviceNames.length || !validateNameList(serviceNames)) {\n    throw new Error(`Wrong attributes passed to onBind decorator (${serviceNames.join(',')}).`);\n  }\n\n  return (service: ServiceType, callbackName: string): ServiceType => {\n    putServiceNamesToConfig(serviceNames, service, callbackName, 'onBind');\n    return service;\n  };\n}\n\nexport function onUnbind(\n  ...serviceNames: Array<string>\n): (service: ServiceType, callbackName: string) => ServiceType {\n  if (!serviceNames.length || !validateNameList(serviceNames)) {\n    throw new Error(`Wrong attributes passed to onUnbind decorator (${serviceNames.join(',')}).`);\n  }\n  return (service: ServiceType, callbackName: string): ServiceType => {\n    putServiceNamesToConfig(serviceNames, service, callbackName, 'onUnbind');\n    return service;\n  };\n}\n\n\nexport function onStart(\n  ...serviceNames: Array<string>\n): (service: ServiceType, callbackName: string) => ServiceType {\n  if (!serviceNames.length || !validateNameList(serviceNames)) {\n    throw new Error(`Wrong attributes passed to onStart decorator (${serviceNames.join(',')}).`);\n  }\n  return (service: ServiceType, callbackName: string): ServiceType => {\n    putServiceNamesToConfig(serviceNames, service, callbackName, 'onStart', false);\n    return service;\n  };\n}\n\n\nexport function onStop(service: ServiceType, callbackName: string): ServiceType {\n  putMethodNameToConfig(service, callbackName, 'onStop');\n  return service;\n}\n"],"file":"serviceDecorators.js"}