{
  "name": "mobx-pack",
  "version": "1.2.5",
  "description": "Library for creating application based on Mobx",
  "main": "dist/index.js",
  "jsnext:main": "src/lib/index.js",
  "author": "Space307",
  "license": "MIT",
  "scripts": {
    "build": "babel src --out-dir dist --ignore 'src/**/__test__','src/**/typing' --source-maps",
    "prepublish": "npm run build",
    "test": "jest",
    "test:verbose": "jest --verbose true",
    "test:watch": "jest --verbose true --watch",
    "test:flow": "flow check",
    "lint": "eslint ./src",
    "lint:fix": "eslint ./src --fix"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/space307/mobx-pack.git"
  },
  "homepage": "https://github.com/space307/mobx-pack/",
  "peerDependencies": {
    "@babel/runtime": "7",
    "mobx": "6",
    "mobx-react": "7",
    "react": "16 - 18",
    "react-dom": "16 - 18",
    "react-is": "16 - 18"
  },
  "devDependencies": {
    "@babel/cli": "^7.18.10",
    "@babel/core": "^7.19.0",
    "@babel/eslint-parser": "^7.18.9",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-decorators": "^7.19.0",
    "@babel/plugin-proposal-do-expressions": "^7.18.6",
    "@babel/plugin-proposal-export-default-from": "^7.18.10",
    "@babel/plugin-proposal-export-namespace-from": "^7.18.9",
    "@babel/plugin-proposal-function-sent": "^7.18.6",
    "@babel/plugin-proposal-json-strings": "^7.18.6",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.18.9",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@babel/plugin-proposal-numeric-separator": "^7.18.6",
    "@babel/plugin-proposal-optional-chaining": "^7.18.9",
    "@babel/plugin-proposal-pipeline-operator": "^7.18.9",
    "@babel/plugin-proposal-throw-expressions": "^7.18.6",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-import-meta": "^7.10.4",
    "@babel/plugin-transform-runtime": "^7.18.10",
    "@babel/polyfill": "^7.12.1",
    "@babel/preset-env": "^7.19.0",
    "@babel/preset-flow": "^7.18.6",
    "@babel/preset-react": "^7.18.6",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "babel-jest": "^29.0.3",
    "eslint": "8.22.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-flowtype": "^8.0.3",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jsx-a11y": "^6.6.1",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react": "^7.31.8",
    "events": "^3.3.0",
    "flow-bin": "^0.186.0",
    "flow-typed": "^3.8.0",
    "jasmine": "^4.4.0",
    "jest": "^28.1.3",
    "jest-environment-jsdom": "^28.1.3",
    "jest-simple-dot-reporter": "^1.0.3",
    "lodash": "^4.17.21",
    "prettier": "^2.7.1"
  },
  "babel": {
    "presets": [
      "@babel/preset-env",
      "@babel/preset-react",
      "@babel/preset-flow"
    ],
    "plugins": [
      [
        "@babel/plugin-proposal-decorators",
        {
          "legacy": true
        }
      ],
      "@babel/plugin-proposal-class-properties",
      "@babel/plugin-syntax-dynamic-import",
      "@babel/plugin-syntax-import-meta",
      "@babel/plugin-proposal-json-strings",
      "@babel/plugin-proposal-function-sent",
      "@babel/plugin-proposal-export-namespace-from",
      "@babel/plugin-proposal-numeric-separator",
      "@babel/plugin-proposal-throw-expressions",
      "@babel/plugin-proposal-export-default-from",
      "@babel/plugin-proposal-logical-assignment-operators",
      "@babel/plugin-proposal-optional-chaining",
      [
        "@babel/plugin-proposal-pipeline-operator",
        {
          "proposal": "minimal"
        }
      ],
      "@babel/plugin-proposal-nullish-coalescing-operator",
      "@babel/plugin-proposal-do-expressions",
      "@babel/plugin-transform-runtime"
    ]
  },
  "jest": {
    "modulePaths": [
      "src"
    ],
    "modulePathIgnorePatterns": [
      "src/demo"
    ],
    "roots": [
      "src"
    ],
    "testEnvironment": "jsdom",
    "reporters": [
      "jest-simple-dot-reporter"
    ],
    "testRegex": "(\\.(test|spec)).(js|jsx|json|node)$"
  }
}
